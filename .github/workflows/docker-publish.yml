name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  pull_request:
    branches: [ master ]
  release:
    types: [published]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: datasite/docker-cicd-node
  TEST_TAG: localhost:5000/datasite/test-cicd-node:latest-chrome
  TEST_CONSUMER_TAG: localhost:5000/datasite/test-cicd-node-consumer

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.1.0
        with:
          cosign-release: 'v2.1.0'


      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: network=host

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and export container to Docker
        id: docker-build
        uses: docker/build-push-action@v3
        with:
          context: ./chrome-headless
          # Google chrome doesn't support arm
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.TEST_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and export consumer test container to Docker
        id: docker-build-consumer
        uses: docker/build-push-action@v3
        with:
          context: ./test
          platforms: linux/amd64
          build-args: DOCKER_REPO=localhost:5000
          load: true
          tags: ${{ env.TEST_CONSUMER_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test
        id: test
        run: |
          docker run --rm --user node ${{ env.TEST_CONSUMER_TAG }}

      - name: Push
        id: docker-push
        uses: docker/build-push-action@v4
        with:
          context: ./chrome-headless
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          COSIGN_EXPERIMENTAL: "true"
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.docker-push.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: cosign sign --yes "${TAGS}@${DIGEST}"

      - name: Rollback Release
        if: ${{ (cancelled() || failure()) && github.event_name == 'release' }}
        uses: author/action-rollback@stable
        with:
          tag: ${{ github.ref }}
          delete_orphan_tag: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cleanup Failed Docker Container
        if: ${{ (cancelled() || failure()) && github.event_name == 'release' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ steps.meta.outputs.version }}
        run: docker rmi --force "${ IMAGE_NAME }:${ VERSION }"
